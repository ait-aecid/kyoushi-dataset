filter {
    if [type] == "openvpn" {
        mutate {
            add_field => {
                "[event][category]" => "openvpn"
            }
        }

        grok {
            match => {
              "message" => [
                "%{OPENVPN_BASE} peer info: %{OPENVPN_PEER_INFO}",
                "%{OPENVPN_BASE} VERIFY EKU %{GREEDYDATA:[openvpn][verify][eku][status]}",
                "%{OPENVPN_BASE} VERIFY KU %{GREEDYDATA:[openvpn][verify][ku][status]}",
                "%{OPENVPN_BASE} VERIFY %{DATA:[openvpn][verify][status]}: depth=%{NONNEGINT:[openvpn][verify][depth]:int}, %{GREEDYDATA:[openvpn][peer][cert][info]}",
                "%{OPENVPN_BASE} (?<message>MULTI: Learn: %{IP:[destination][ip]} -> %{OPENVPN_USER}/%{OPENVPN_CONNECTION})",
                "%{OPENVPN_BASE} (?<message>MULTI: primary virtual IP for %{OPENVPN_USER}/%{OPENVPN_CONNECTION}: %{IP:[destination][ip]})",
                "%{OPENVPN_BASE} (?<message>MULTI_sva: pool returned IPv4=%{OPENVPN_POOL_RETURN:[openvpn][pool][return][ipv4]}, IPv6=%{OPENVPN_POOL_RETURN:[openvpn][pool][return][ipv6]})",
                "%{OPENVPN_BASE} (?<message>MULTI: new connection by client '%{USERNAME:[openvpn][peer][duplicate]}' will cause previous active sessions by this client to be dropped.  Remember to use the --duplicate-cn option if you want multiple clients using the same certificate or username to concurrently connect.)",
                "%{OPENVPN_BASE} %{OPENVPN_PUSH:message}",
                "%{OPENVPN_BASE} %{OPENVPN_SENT_CONTROL:message}",
                "%{OPENVPN_BASE} %{OPENVPN_DATA_CHANNEL:message}",
                "%{OPENVPN_BASE} \[UNDEF\] %{GREEDYDATA:message}",
                "%{OPENVPN_BASE} \[%{OPENVPN_USER}\] %{GREEDYDATA:message}",
                "%{OPENVPN_BASE} %{GREEDYDATA:message}"
              ]
            }

            pattern_definitions => {
                "OPENVPN_PUSH" => "(PUSH: %{GREEDYDATA:[openvpn][push][message]})"
                "OPENVPN_SENT_CONTROL" => "(SENT CONTROL \[%{USERNAME:[openvpn][control][user]}\]: '%{DATA:[openvpn][control][message]}' \(status=%{INT:[openvpn][control][status]:int}\))"
                "OPENVPN_DATA_CHANNEL" => "(%{NOTSPACE:[openvpn][data][channel]} Data Channel: %{GREEDYDATA:[openvpn][data][message]})"
                "OPENVPN_POOL_RETURN" => "(%{IP:[openvpn][pool][returned]}|\(Not enabled\))"
                "OPENVPN_TIMESTAMP" => "%{YEAR}-%{MONTHNUM2}-%{MONTHDAY} %{TIME}"
                "OPENVPN_USER" => "%{USERNAME:[source][user][name]}"
                "OPENVPN_CONNECTION" => "(%{IP:[source][ip]}:%{POSINT:[source][port]:int})"
                "OPENVPN_PEER_INFO" => "%{GREEDYDATA:[openvpn][peer][info][field]}=%{GREEDYDATA:[openvpn][peer][info][value]}"
                "OPENVPN_BASE" => "%{OPENVPN_TIMESTAMP:timestamp}( %{OPENVPN_USER}/)?(\s?%{OPENVPN_CONNECTION})?"
            }
            overwrite => ["message"]
        }

        if [openvpn][verify][depth] == 0 and [openvpn][peer][cert][info] {
            mutate {
                copy => {
                    "[openvpn][peer][cert][info]" => "[source][user][name]"
                }
                gsub => [
                    "[source][user][name]", ".*CN=(.*),.*","\1"
                ]
            }
        }

        if [openvpn][peer][duplicate] {
            mutate {
                copy => {
                    "[openvpn][peer][duplicate]" => "[source][user][name]"
                }
            }
        }

        if [openvpn][pool][returned][1] == "(Not enabled)" {
            mutate {
                remove_field => "[openvpn][pool][returned][1]"
            }
        }

        if [openvpn][pool][returned][0] == "(Not enabled)" {
            mutate {
                remove_field => "[openvpn][pool][returned][0]"
            }
        }

        if [openvpn][pool][return][ipv4] == "(Not enabled)" {
            mutate {
                remove_field => "[openvpn][pool][return][ipv4]"
            }
        }

        if [openvpn][pool][return][ipv6] == "(Not enabled)" {
            mutate {
                remove_field => "[openvpn][pool][return][ipv6]"
            }
        }


        date {
            match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
            remove_field => "timestamp"
            timezone => "%{[@metadata][event][timezone]}"
        }
    }
}
